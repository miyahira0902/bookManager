plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.15'
}

group = 'com.jyonkudo'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.jooq:jooq:3.19.15'
    implementation 'org.jooq:jooq-meta:3.19.15'
    implementation 'org.jooq:jooq-codegen:3.19.15'
    jooqCodegen 'mysql:mysql-connector-java:8.0.33'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

jooq {
    configuration {

        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            url = 'jdbc:mysql://localhost:33306/book_manager'
            user = 'root'
            password = 'root'
        }
        generator {
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'book_manager'
                includes = '.*'
            }

            target {
                packageName = 'com.jyonkudo.bookmanager.jooq.genarated'
                directory = '/src/main/java'
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
