/*
 * This file is generated by jOOQ.
 */
package com.jyonkudo.bookmanager.jooq.genarated.tables.records;


import com.jyonkudo.bookmanager.jooq.genarated.tables.BookAuthor;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 書籍・著者関連テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookAuthorRecord extends UpdatableRecordImpl<BookAuthorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>book_manager.book_author.book_id</code>. 書籍ID
     */
    public void setBookId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>book_manager.book_author.book_id</code>. 書籍ID
     */
    public Integer getBookId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>book_manager.book_author.author_id</code>. 著者ID
     */
    public void setAuthorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>book_manager.book_author.author_id</code>. 著者ID
     */
    public Integer getAuthorId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookAuthorRecord
     */
    public BookAuthorRecord() {
        super(BookAuthor.BOOK_AUTHOR);
    }

    /**
     * Create a detached, initialised BookAuthorRecord
     */
    public BookAuthorRecord(Integer bookId, Integer authorId) {
        super(BookAuthor.BOOK_AUTHOR);

        setBookId(bookId);
        setAuthorId(authorId);
        resetChangedOnNotNull();
    }
}
